apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'

group = 'com.github.maxfonten'
version = '1.1-SNAPSHOT'

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives jar, sourcesJar, javadocJar, groovydocJar
}

repositories {
    mavenCentral()
    mavenRepo url: 'http://m2repo.spockframework.org/snapshots'
    mavenRepo url: 'http://oss.sonatype.org/content/groups/public/'
}

dependencies {
    groovy 'org.codehaus.groovy:groovy-all:1.8.6'
    compile 'junit:junit:4.8.2'
    compile 'org.apache.httpcomponents:httpclient:4.1.2'
    compile 'org.eclipse.jetty:jetty-server:7.3.1.v20110307'
    compile 'org.yaml:snakeyaml:1.9'
    testCompile('org.codehaus.groovy.modules.http-builder:http-builder:0.5.1') {
        exclude module: 'groovy'
        exclude module: 'httpclient'
    }
    testRuntime 'cglib:cglib-nodep:2.2.2'
    testCompile 'commons-httpclient:commons-httpclient:3.1'
    testCompile('org.spockframework:spock-core:0.6-groovy-1.8') {
        exclude module: 'groovy-all'
    }
}

project.poms = [project.install.repositories.mavenInstaller.pom]

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Betamax - An HTTP stubbing proxy for testing JVM applications.'
                packaging 'jar'
                description 'Betamax is a Groovy record/playback proxy for stubbing access to external HTTP resources when testing. Inspired by Ruby\'s VCR.'
                url 'http://robfletcher.github.com/betamax'
                inceptionYear '2011'

                scm {
                    url 'scm:git@github.com:robfletcher/betamax.git'
                    connection 'scm:git@github.com:robfletcher/betamax.git'
                    developerConnection 'scm:git@github.com:robfletcher/betamax.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'robfletcher'
                        name 'Rob Fletcher'
                        url 'http://blog.freeside.co/'
                        roles {
                            role 'Lead'
                            role 'Founder'
                        }
                    }
                }
            }

            project.poms << pom
        }
    }
}

// Remove test deps from all poms
project.poms*.whenConfigured { pom ->
	pom.dependencies.removeAll(pom.dependencies.findAll { it.scope == 'test' })
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-7'
}
